---
layout: layout
---

@using Pretzel.Logic.Templating.Context;
@using Page = Pretzel.Logic.Templating.Context.Page;
@using System.IO;
@using System.Xml;
@using System.ServiceModel.Syndication;

@{
    // Helpers that convert our bag for us.

    Func<string, string> InitValue = delegate( string key )
    {
        string var;
        if( Model.Bag.ContainsKey( key ) )
        {
            var = Model.Bag[key].ToString();
        }
        else
        {
            var = string.Empty;
        }

        return var;
    };

    string Author = InitValue( "author" );
    string LogoUrl = InitValue( "logourl" );
    string RssUrl = InitValue( "rss" );
    string SiteUrl = InitValue( "siteurl" );

    string Facebook = InitValue( "facebook" );
    string GooglePlus = InitValue( "googleplus" );
    string GitHub = InitValue( "github" );
    string Tumblr = InitValue( "tumblr" );
    string Twitter = InitValue( "twitter" );
    string YouTube = InitValue( "youtube" );
}

<!-- Title -->
<div id="page-inner">
    <div class="row">
        <div class="col-md-12">
            <h1 class="page-head-line">@Model.Page.Title</h1>
            <div class="page-subhead-line">
                <p>Author(s): @Author</p>
                <p>
                    Tagged as:
                    @foreach( string tag in Model.Page.Tags )
                    {
                        foreach( var thePage in Model.Site.Pages )
                        {
                            if( thePage.Bag.ContainsKey( "tag" ) )
                            {
                                if( tag.Equals( thePage.Bag["tag"] ) )
                                {
                                    <a href="@thePage.Url">@tag</a>@:,
                                }
                            }
                        }
                    }
                </p>
            </div>
        </div>
    </div>

    <!-- Right-buttons -->
    <div class="page-subhead-line header-right">
        <!-- Right-buttons -->

        <a href="@SiteUrl" class="btn btn-success" title="Visit Site"><i class="fa fa-send fa-2x"></i>Visit Site</a>

        @if( string.IsNullOrEmpty( GitHub ) == false )
        {
            <a href="@GitHub" class="btn btn-default" title="default"><i class="fa fa-github fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( Facebook ) == false )
        {
            <a href="@Facebook" class="btn btn-primary" title="Facebook"><i class="fa fa-facebook fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( Twitter ) == false )
        {
            <a href="@Twitter" class="btn btn-info" title="Twitter"><i class="fa fa-twitter fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( YouTube ) == false )
        {
            <a href="@YouTube" class="btn btn-danger" title="YouTube"><i class="fa fa-youtube fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( GooglePlus ) == false )
        {
            <a href="@GooglePlus" class="btn btn-warning" title="Google+"><i class="fa fa-google-plus fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( Tumblr ) == false )
        {
            <a href="@Tumblr" class="btn btn-default" title="Tumblr"><i class="fa fa-tumblr fa-2x"></i></a>
        }
        @if( string.IsNullOrEmpty( RssUrl ) == false )
        {
            <a href="@RssUrl" class="btn btn-warning" title="Feed"><i class="fa fa-rss fa-2x"></i></a>
        }
        <a href="#disqus_thread" class="btn btn-default" title="Comments"><i class="fa fa-comments fa-2x"></i></a>
        <a href="/report.html" class="btn btn-danger" title="Report"><i class="fa fa-exclamation-circle fa-2x"></i> Report</a>
    </div>

    @if( string.IsNullOrEmpty( LogoUrl ) == false )
    {
        <div>
            <a href="@SiteUrl"><img src="@LogoUrl" alt="Site Logo" /></a>
        </div>
    }

    <!-- Main Content -->
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    About Website:
                </div>
                <div class="panel-body">
                    @Raw( Model.Content )
                </div>
            </div>
        </div>
    </div>

    <!-- RSS Feed -->
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Latest Posts:
                </div>
                <div class="panel-body">
                    @{
                        try
                        {
                            string feedPath = Path.Combine( Path.GetDirectoryName( Model.Page.File ), "feed.xml" );
                            if( File.Exists( feedPath ) )
                            {
                                SyndicationFeed feed = null;

                                string feedContents = File.ReadAllText( feedPath );
                                using( StringReader feedReader = new StringReader( feedContents ) )
                                {
                                    // Get rid of permalink information.
                                    feedReader.ReadLine(); // ---
                                    feedReader.ReadLine(); // permalink: /profile/something/feed.xml
                                    feedReader.ReadLine(); // layout: nil
                                    feedReader.ReadLine(); // ---

                                    using( XmlReader reader = XmlReader.Create( feedReader ) )
                                    {
                                        feed = SyndicationFeed.Load( reader );
                                    }
                                }

                                @:<ul class="media-list">
                                foreach( SyndicationItem item in feed.Items )
                                {
                                    <text>
                                        <li class="media">
                                            <div class="media-body">
                                                <h4 class="media-heading"><a href="@(item.Links[0].Uri)">@(item.Title.Text)</a></h4>
                                                <h5 class="media-heading">@(item.PublishDate)</h5>
                                                <p>
                                                    @(Raw( System.Net.WebUtility.HtmlDecode( item.Summary.Text ) ))
                                                </p>
                                            </div>
                                        </li>
                                    </text>
                                }
                                @:</ul>
                            }
                            else
                            {
                                @:No RSS Feed Provided, please visit site to see latest posts.
                            }
                        }
                        catch( Exception )
                        {
                            @:An error occurred when trying to load the RSS feed.  Please <a href="/report.html">report</a> this site for reason
                            @: &quot;Broken RSS Feed&quot;
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Comments -->
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Post a comment:
                </div>
                <div class="panel-body">
                    <div id="disqus_thread"></div>
                    <script>
                    /**
                    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
                    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
                    
                    var disqus_config = function () {
                        this.page.url = '@Model.Site.Config["url"].ToString()@Model.Page.Url';  // Replace PAGE_URL with your page's canonical URL variable
                    };
                    
                    (function() { // DON'T EDIT BELOW THIS LINE
                    var d = document, s = d.createElement('script');
                    s.src = 'https://@(Model.Site.Config["disqus_shortname"].ToString()).disqus.com/embed.js';
                    s.setAttribute('data-timestamp', +new Date());
                    (d.head || d.body).appendChild(s);
                    })();
                    </script>
                    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
                    <a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>
                </div>
            </div>
        </div>
    </div>
</div>